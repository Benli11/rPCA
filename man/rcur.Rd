% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rcur.R
\name{rcur}
\alias{rcur}
\title{Randomized CUR matrix decomposition.}
\usage{
rcur(A, k = NULL, p = 10, q = 0, idx_only = FALSE, rand = "TRUE")
}
\arguments{
\item{A}{Array_like. \cr
A numeric input matrix (or data frame), with dimensions \eqn{(m, n)}. \cr
If the data contain \eqn{NA}s na.omit is applied.}

\item{k}{Int, optional. \cr
Sets the target rank of the low-rank approximation, i.e., the number of columns/rows
 to be selected. It is required that \eqn{k} is smaller or equal to \eqn{min(m,n)}.}

\item{p}{Int, optional. \cr
Oversampling parameter (default \eqn{p=10}).}

\item{q}{Int, optional. \cr
Number of power iterations (default \eqn{q=0}).}

\item{idx_only}{Bool (\eqn{TRUE}, \eqn{FALSE}), optional. \cr
If (\eqn{TRUE}), the index set \code{C.idx} and \code{R.idx} is returned, but not 
the matrices \code{C} and \code{R}. 
This is more memory efficient, when dealing with large-scale data.}

\item{rand}{Bool (\eqn{TRUE}, \eqn{FALSE}). \cr
If (\eqn{TRUE}), a probabilistic strategy is used, otherwise a deterministic algorithm is used.}

\item{.................}{.}
}
\description{
Randomized CUR matrix decomposition.
}
\details{
Algorithm for computing the CUR of a rectangular \eqn{(m, n)} matrix \eqn{A}, with target rank 
\eqn{k << min(m,n)}. The input matrix is factored as \eqn{A = C * U * R}, 
using the \code{\link{rid}} decomposition. The factor matrix \eqn{C} is formed as a subset of 
columns of \eqn{A}, also called the partial column skeleton. The factor matrix \eqn{R} is formed as
a subset of rows of \eqn{A}, also called the partial row skeleton. The factor matrix \eqn{U} 
is well-conditioned. 

If \eqn{rand='TRUE'} a probabilistic strategy is used to compute the decomposition, otherwise a
deterministic algorithm is used.
}
\seealso{
\code{\link{rcur}},
}
\author{
N. Benjamin Erichson, \email{erichson@uw.edu}
}
